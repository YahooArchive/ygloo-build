$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_CFLAGS := $(TARGET_CFLAGS) $(LOCAL_CFLAGS)
$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_DEBUG_CFLAGS := $(TARGET_DEBUG_CFLAGS)
$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_C_INCLUDES := $(LOCAL_C_INCLUDES) $(LOCAL_PATH)
$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_TARGET_C_INCLUDES := $(BUILD_SYSTEM)/include
$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_CC := $(TARGET_CC)
$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_CXX := $(TARGET_CXX)
$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_IMPORT_INCLUDES := $(BUILD_SYSTEM)/includes.txt
# Define to -MD for including system dependencies, -MMD for local dependencies only
$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_DEPEND_CFLAGS := -MD
# $(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_NO_DEFAULT_COMPILER_FLAGS := 1
$(LOCAL_INTERMEDIATE_TARGETS): PRIVATE_ALL_SHARED_LIBRARIES := $(built_shared_libraries)

$(OBJSDIR)/intermediate/$(LOCAL_MODULE)/%.o: $(LOCAL_PATH)/%.c
	$(transform-c-to-o)

$(OBJSDIR)/intermediate/$(LOCAL_MODULE)/%.o: $(LOCAL_PATH)/%.cpp
	$(transform-cpp-to-o)

#######################################
LOCAL_MODULE_CLASS := $(strip $(LOCAL_MODULE_CLASS))
ifeq ($(LOCAL_MODULE_CLASS),)
LOCAL_MODULE_CLASS := modules
endif
LOCAL_UNINSTALLABLE_MODULE:=true
include $(BUILD_SYSTEM)/base_rules.mk
#######################################
